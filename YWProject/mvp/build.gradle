apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda' // lambda
apply plugin: 'org.greenrobot.greendao' //greendao

android {
    compileSdkVersion COMPILE_SDK_VERSION as int

    defaultConfig {
        applicationId "com.yw.mvp"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion COMPILE_SDK_VERSION as int
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('../mvp.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            //buildConfigField "String", "build_version", "\"" + releaseTime() + "\""
            signingConfig signingConfigs.config //对应着签名
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules/pro'
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            debuggable false
            jniDebuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "default"
    productFlavors {
        T1111{}
        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = ["HUXIN_CHANNEL_VALUE": name]
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    //自动打包
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "release") {
                outputFileName = "huxin_v${variant.versionName}_${variant.productFlavors[0].name}_${releaseTime()}" + ".apk"
            } else {
                outputFileName = "huxin_v${variant.versionName}_debug.apk"
            }
        }
        variant.assemble.doLast {
            copyBuildApk(variant)
        }
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd_HHmm")
}

greendao {
    schemaVersion 1
    daoPackage 'com.yw.mvp.db.dao'
    targetGenDir 'src/main/java'
}


def copyBuildApk(variant) {
    copy {
        from("${buildDir}/outputs/apk/${variant.productFlavors[0].name}/release") {
            include "*.apk"
        }
        into '../dist/huxinApp'
    }

    copy {
        from('../huxin_sdk/build/outputs/aar') {
            include '*-release.aar'
        }
        into '../dist/huxinSdk'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:${SUPPORT_VERSION}"
    implementation "com.android.support:support-v4:${SUPPORT_VERSION}"
    implementation "com.android.support:design:${SUPPORT_VERSION}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    //test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // add library
    implementation project(':ui')
    implementation project(':letterbar')
    //rxjava
    compile 'io.reactivex.rxjava2:rxjava:2.1.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //gson、glide
    implementation 'com.google.code.gson:gson:2.7'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    //db
    implementation 'org.greenrobot:greendao:3.2.2'

}
